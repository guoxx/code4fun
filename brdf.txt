analytic

# Blinn Phong based on halfway-vector

# variables go here...
# only floats supported right now.
# [type] [name] [min val] [max val] [default val]

::begin parameters
float n 1 1000 100
float f0 0 1 0.1
bool multiply_by_NdotL 1
bool improved_brdf 1
bool fresnel 1
bool normalization_factor 1
::end parameters


# Then comes the shader. This should be GLSL code
# that defines a function called BRDF (although you can
# add whatever else you want too, like sqr() below).

::begin shader

float Fresnel(float f0, float u)
{
    return f0 + (1-f0) * pow(1-u, 5);
}

vec3 BRDF( vec3 L, vec3 V, vec3 N, vec3 X, vec3 Y )
{
    vec3 H = normalize(L+V);

    float val = pow(max(0,dot(N,H)),n);
    if (multiply_by_NdotL)
    {
        val = val * dot(N,L);
    }
    if (fresnel || improved_brdf)
    {
        float F = Fresnel(f0, dot(L,H));
        val = val * F;
    }
    else
    {
        val = val * f0;
    }
    if (normalization_factor || improved_brdf)
    {
        val = val * (n + 2) / 8;
    }
    return vec3(val);
}

::end shader
